##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library(readr)
library(jsonlite)
##Set working directory
setwd("C:/Users/jaramana/Desktop/covid-tracker-nyc")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars_modified.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library(readr)
library(jsonlite)
##Set working directory
setwd("C:/Users/jaramana/Desktop/covid-tracker-nyc")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars_modified.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
View(d)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
View(p)
View(d)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Rename column header to merge
d <- d %>% rename('zcta' = MODZCTA)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library(readr)
library(jsonlite)
##Set working directory
setwd("C:/Users/jaramana/Desktop/covid-tracker-nyc")
##Spatial Visualization--
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars_modified.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename('zcta' = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
View(p)
View(d)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library(readr)
library(jsonlite)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library(readr)
library(jsonlite)
##Set working directory
setwd("C:/Users/jaramana/Desktop/covid-tracker-nyc")
##Spatial Visualization--
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars_modified.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
merge(p, d, by='zcta')
merge(p, d, by=zcta)
View(d)
merge(p, d, by='zcta', duplicateGeoms=TRUE)
m <- merge(p, d, by='zcta', duplicateGeoms=TRUE)
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$population)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$population)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269", makeUniqueIDs = TRUE))
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"), makeUniqueIDs = TRUE)
spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"), makeUniqueIDs = TRUE)
merge(p, d, by='zcta', makeUniqueIDs = TRUE)
View(p)
View(d)
aggregate(d['y'], by=d['x'], sum)
aggregate(d['zcta'], by=d['positive'], sum)
aggregate(d['zcta'], by=d['Positive'], sum)
aggregate(d['Positive'], by=d['zcta'], sum)
aggregate(d['Tests'], by=d['zcta'], sum)
aggregate(d['Total'], by=d['zcta'], sum)
d <- aggregate(d['Positive'], by=d['zcta'], sum)
View(d)
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars_modified.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
d1 <- aggregate(d['Positive','Total'], by=d['zcta'], sum)
aggregate(d['Positive'*'Total'], by=d['zcta'], sum)
m1 <- aggregate(d~'Positive'*'Total',data=d,FUN=sum)
aggregate(d~'Positive'*'Total',by=d,'ZCTA'=sum)
aggregate(d~'Positive'+`'Total',by=d,'ZCTA'=sum)
m1 <- aggregate(d~'Positive'+'Total',by=d,'ZCTA'=sum)
)
)
aggregate(d~'Positive'+'Total',by=d,'ZCTA'=sum)
aggregate(d['Positive'+'Total'], by=d['zcta'], sum)
aggregate(list(d$'Positive', d$'Total'), by = d$'zcta'), sum)
aggregate(list(d$'Positive', d$'Total'), by = d$'zcta', sum)
aggregate(list(d$'Positive', d$'Total'), by = list(d$'zcta', d$'zcta'), sum)
aggregate(list(d$'Positive', d$'Total'), by = list(d$'zcta'), sum)
d1 <- aggregate(list(d$'Positive', d$'Total'), by = list(d$'zcta'), sum)
View(d1)
d1 %>%
rename(2 = "Positives")
rename(d1, 'Positive' = 2)
rename(d1, 'Total' = 3)
rename(d1, 'zcta' = 1)
rename(d1, 'Positive' = 2)
rename(d1, 'Total' = 3)
d1 <- rename(d1, 'zcta' = 1)
d1 <- rename(d1, 'Positive' = 2)
d1 <- rename(d1, 'Total' = 3)
View(d1)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library(readr)
library(jsonlite)
##Set working directory
setwd("C:/Users/jaramana/Desktop/covid-tracker-nyc")
##Spatial Visualization--
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars_modified.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Sum duplicate zipcodes (sometimes happens)
d <- aggregate(list(d$'Positive', d$'Total'), by = list(d$'zcta'), sum)
d <- rename(d1, 'zcta' = 1)
d <- rename(d1, 'Positive' = 2)
d <- rename(d1, 'Total' = 3)
View(d)
d <- rename(d, 'zcta' = 1)
d <- rename(d, 'Positive' = 2)
d <- rename(d, 'Total' = 3)
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars_modified.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Sum duplicate zipcodes (sometimes happens)
d <- aggregate(list(d$'Positive', d$'Total'), by = list(d$'zcta'), sum)
d <- rename(d, 'zcta' = 1)
d <- rename(d, 'Positive' = 2)
d <- rename(d, 'Total' = 3)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$population)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$population)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Write as GeoJSON
writeOGR(m, "data/covid_nyc.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
writeOGR(m, "data/covid_nyc_ogr.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
##Get quantiles for breaks / legend
quantile(m$Positive, probs = seq(0, 1, .20))
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/case-hosp-death.csv"
##Load data
d <- read_csv(url(urlfile))
##Change NA to 0
d[is.na(d)] <- 0
##Create new columns with cumulative sums
d[,"NEW_COVID_CASE_COUNT_CUM"] <- cumsum(d$NEW_COVID_CASE_COUNT)
d[,"HOSPITALIZED_CASE_COUNT_CUM"] <- cumsum(d$HOSPITALIZED_CASE_COUNT)
d[,"DEATH_COUNT_CUM"] <- cumsum(d$DEATH_COUNT)
##Write as json
write_json(d, "data/case-hosp-death_cumulative.json", pretty = TRUE)
##Write as csv for public use
write.csv(d, "data/case-hosp-death_cumulative.csv", row.names = FALSE)
##Write as GeoJSON
writeOGR(m, "data/covid_nyc_ogr.json", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
