View(p)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(d, c, by='zcta')
View(d)
View(m)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(m, p, by='zcta')
View(m)
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$P001001)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$P001001)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(m, p, by='zcta')
View(m)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/test/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/test/total_population_2010_zcta.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(m, p, by='zcta')
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(d, p, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$P001001)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$P001001)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/test/ZIP_CODE_040114/ZIP_CODE_040114.shp")
d <- read_csv(url(urlfile))
##Remove unncessary columns
p@data <- p@data %>% select(1, 4)
##Rename to merge
d <- d %>% rename(ZIPCODE = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='ZIPCODE')
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/test/ZIP_CODE_040114/ZIP_CODE_040114.shp")
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/test/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/test/total_population_2010_zcta.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(m, c, by='zcta')
View(m)
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$P001001)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$P001001)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Write as GeoJSON
writeOGR(m, "merged.geojson", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
View(m)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/total_population_2010_zcta.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$P001001)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$P001001)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Write as GeoJSON
writeOGR(m, "data/covid_nyc.json", layer="merged", driver="json", overwrite_layer=TRUE)
writeOGR(m, "data/covid_nyc.json", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
writeOGR(m, "data/covid_nyc.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
writeOGR(m, "data/covid_nyc_test.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/total_population_2010_zcta.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$P001001)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$P001001)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Write as GeoJSON
writeOGR(m, "data/covid_nyc_test.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
c <- read_csv("data/raw/ACS2015_zctaallvars.csv")
c <- read_csv("data/raw/ACS2015_zctaallvars.csv")
View(c)
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
p@data <- p@data %>% select(1)
m <- merge(p, c, by='zcta')
View(c)
View(p)
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
writeOGR(m, "data/ACS2015_zctaallvars.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
View(m)
quantile(m$sdi_score, probs = seq(0, 1, .20))
View(m)
na.omit(m)
m
m_na <- na.omit(m)
quantile(m_na$sdi_score, probs = seq(0, 1, .20))
sp.na.omit(m)
sp.na.omit(m)
na.omit(shape$m)
m_na <- m[!is.na(m@data$col),]
quantile(m_na$sdi_score, probs = seq(0, 1, .20))
m@data$col
m$col
m
m_na <- m[!is.na(m),]
m_na <- m[!is.na(m$zcta),]
quantile(m_na$sdi_score, probs = seq(0, 1, .20))
m_na <- m[!is.na(m$sdi_score),]
quantile(m_na$sdi_score, probs = seq(0, 1, .20))
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$P001001)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$P001001)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Write as GeoJSON
writeOGR(m, "data/covid_nyc_test.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
View(c)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$population)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$population)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Write as GeoJSON
writeOGR(m, "data/covid_nyc_test.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
c <- read_csv("data/raw/ACS2015_zctaallvars.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Merge Spatial data with census data
m <- merge(p, c, by='zcta')
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Write as GeoJSON
writeOGR(m, "data/ACS2015_zctaallvars.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
c <- read_csv("data/raw/ACS2015_zctaallvars.csv")
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
c <- read_csv("data/raw/ACS2015_zctaallvars_modified.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Merge Spatial data with census data
m <- merge(p, c, by='zcta')
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Write as GeoJSON
writeOGR(m, "data/ACS2015_zctaallvars.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
writeOGR(m, "data/ACS2015_zctaallvars.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
quantile(m_na$sdi_score, probs = seq(0, 1, .20))
##addendum
##Get quantiles for breaks / legend
m_na <- m[!is.na(m$sdi_score),]
quantile(m_na$sdi_score, probs = seq(0, 1, .20))
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$population)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$population)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
c <- read_csv("data/raw/ACS2015_zctaallvars.csv")
c <- read_csv("data/raw/ACS2015_zctaallvars_modified")
##Load package
library(raster)
library(rgdal)
library(tidyverse)
library(dplyr)
library (readr)
##Set working directory
setwd("C:/Users/jaramana/Desktop/COVID Tracker NYC")
##Link to DOHMH Github Data
urlfile="https://raw.githubusercontent.com/nychealth/coronavirus-data/master/tests-by-zcta.csv"
##Load data
p <- shapefile("data/raw/nyu_2451_34509/nyu_2451_34509")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars_modified")
d <- read_csv(url(urlfile))
c <- read_csv("data/raw/ACS2015_zctaallvars_modified.csv")
##Remove unncessary columns
p@data <- p@data %>% select(1)
##Remove unncessary columns
d <- d %>% select(1,2,3)
##Rename column header to merge
d <- d %>% rename(zcta = MODZCTA)
##Merge Zip Code shapefile with Testing data (DOHMH)
m <- merge(p, d, by='zcta')
##Merge Spatial data with census data
m <- merge(m, c, by='zcta')
m$Positive[ is.na(m$Positive)] = 0
m$Total[ is.na(m$Total)] = 0
##Positive per capita
m$positiveperthou <- (m$Positive / m$population)*1000
m$positiveperthou[ is.na(m$positiveperthou)] = 0
m$positiveperthou <- format(round(m$positiveperthou, 2), nsmall = 2)
m$positiveperthou <- as.numeric(m$positiveperthou)
##Total per capita
m$totalperthou <- (m$Total / m$population)*1000
m$totalperthou[is.na(m$totalperthou)] = 0
m$totalperthou <- format(round(m$totalperthou, 2), nsmall = 2)
m$totalperthou <- as.numeric(m$totalperthou)
##Assign CRS
m <- spTransform(m, CRS("+proj=longlat +datum=WGS84 +init=epsg:4269"))
##Write as GeoJSON
writeOGR(m, "data/covid_nyc_test.js", layer="merged", driver="GeoJSON", overwrite_layer=TRUE)
##addendum
##Get quantiles for breaks / legend
quantile(m$totalperthou, probs = seq(0, 1, .20))
quantile(m$positiveperthou, probs = seq(0, 1, .20))
##addendum
##Get quantiles for breaks / legend
quantile(m$positiveperthou, probs = seq(0, 1, .25))
quantile(m$totalperthou, probs = seq(0, 1, .25))
quantile(m$Total, probs = seq(0, 1, .25))
##addendum
##Get quantiles for breaks / legend
quantile(m$Total, probs = seq(0, 1, .20))
quantile(m$totalperthou, probs = seq(0, 1, .20))
quantile(m$positiveperthou, probs = seq(0, 1, .20))
quantile(m$Positive, probs = seq(0, 1, .20))
